@{
    ViewBag.Title = "Data Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h2 class="mb-0">üìä Data Management</h2>
                    <div>
                        <span class="badge badge-light mr-3" id="userTypeDisplay">Admin</span>
                        <a href="@Url.Action("Logout", "Home")" class="btn btn-danger btn-sm">Logout</a>
                    </div>
                </div>
                <div class="card-body">
                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-info alert-dismissible fade show" role="alert">
                            @ViewBag.Message
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    @if (ViewBag.Error != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @ViewBag.Error
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Photo</th>
                                    <th>User ID</th>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>User Type</th>
                                    <th>Registration Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.Users != null && ViewBag.Users.Count > 0)
                                {
                                    @foreach (var user in ViewBag.Users)
                                    {
                                        string userTypeName = user.UserType == 1 ? "Content Creator" :
                                                              user.UserType == 2 ? "Content Consumer" :
                                                              user.UserType == 3 ? "Admin" : "Unknown";
                                        string badgeClass = user.UserType == 1 ? "badge badge-info" :
                                                           user.UserType == 2 ? "badge badge-secondary" :
                                                           user.UserType == 3 ? "badge badge-danger" : "badge badge-custom";
                                        <tr>
                                            <td>
                                                @if (!string.IsNullOrEmpty(user.PhotoPath))
                                                {
                                                    <img src="/@user.PhotoPath" alt="@user.Username" class="rounded-circle photo-thumbnail" />
                                                }
                                                else
                                                {
                                                    <img src="https://via.placeholder.com/50?text=No+Photo" alt="No Photo" class="rounded-circle photo-thumbnail" />
                                                }
                                            </td>
                                            <td>#@user.UserID</td>
                                            <td>@user.Username</td>
                                            <td>@user.Email</td>
                                            <td>@user.PhoneNumber</td>
                                            <td>
                                                <span class="@badgeClass">@userTypeName</span>
                                            </td>
                                            <td>@user.RegistrationDate.ToString("yyyy-MM-dd HH:mm")</td>
                                            <td>
                                                <button class="btn btn-primary btn-sm" onclick="openEditModal(@user.UserID, '@user.Username', '@user.Email', '@user.PhoneNumber', '@user.UserType', '@user.PhotoPath', @(user.SubscriptionTypeId ?? 0))">Edit</button>
                                                <button class="btn btn-danger btn-sm" onclick="deleteUser(@user.UserID)">Delete</button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="8" class="text-center text-muted">No users found in the database.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (ViewBag.Users != null && ViewBag.Users.Count > 0)
                    {
                        <p class="mt-3 text-muted">
                            <strong>Total Users: @ViewBag.Users.Count</strong>
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="editModalLabel">Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Photo Preview and Upload Section -->
                <div class="text-center mb-4">
                    <img id="modalPhotoPreview" src="https://via.placeholder.com/120?text=No+Photo" 
                         alt="User Photo" class="rounded-circle mb-3" 
                         style="width: 120px; height: 120px; object-fit: cover; border: 3px solid #007bff;">
                    
                    <div class="mt-3">
                        <input type="file" id="modalPhotoFile" accept="image/*" class="form-control-file" style="display: none;">
                        <button type="button" class="btn btn-success btn-sm" onclick="document.getElementById('modalPhotoFile').click()">
                            üì∑ Choose New Photo
                        </button>
                        <button type="button" class="btn btn-info btn-sm ml-2" onclick="uploadPhotoFromModal()" id="uploadPhotoBtn" style="display: none;">
                            ‚¨ÜÔ∏è Upload Photo
                        </button>
                    </div>
                    <div id="modalUploadMessage" class="mt-2"></div>
                </div>

                <hr>

                <!-- User Details Form -->
                <form id="editForm">
                    <div class="form-group">
                        <label for="editUserId">User ID</label>
                        <input type="text" class="form-control" id="editUserId" disabled>
                    </div>
                    <div class="form-group">
                        <label for="editName">Name</label>
                        <input type="text" class="form-control" id="editName" required>
                    </div>
                    <div class="form-group">
                        <label for="editEmail">Email</label>
                        <input type="email" class="form-control" id="editEmail" required>
                    </div>
                    <div class="form-group">
                        <label for="editPhone">Phone</label>
                        <input type="text" class="form-control" id="editPhone">
                    </div>
                    <div class="form-group">
                        <label for="editUserType">User Type</label>
                        <select class="form-control" id="editUserType">
                            <option value="1">Content Creator</option>
                            <option value="2">Content Consumer</option>
                            <option value="3">Admin</option>
                        </select>
                    </div>

                    <!-- Subscription Type Dropdown (Only for Content Consumer) -->
                    <div class="form-group" id="editSubscriptionDiv" style="display: none;">
                        <label for="editSubscriptionType">Subscription Plan</label>
                        <select class="form-control" id="editSubscriptionType">
                            <option value="">-- Select Subscription Plan --</option>
                            <option value="1">Gold</option>
                            <option value="2">Premium</option>
                            <option value="3">Luxury</option>
                            <option value="36">ProLux</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveUser()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border: none;
        border-radius: 8px;
    }

    .card-header {
        border-radius: 8px 8px 0 0;
        padding: 20px;
    }

    .table-responsive {
        border-radius: 0 0 8px 8px;
    }

    .table thead th {
        vertical-align: middle;
        border: none;
    }

    .table tbody td {
        vertical-align: middle;
    }

  .badge-info,
.badge-secondary,
.badge-danger,
.badge-custom {
    padding: 8px 12px;
    font-size: 12px;
}

.badge-info,
.badge-secondary,
.badge-danger {
    color: #000 !important;
}

.badge-custom {
    background-color: #e0e0e0 !important;
    color: #000 !important;
}

    .btn-sm {
        padding: 5px 10px;
        font-size: 12px;
    }

    .photo-thumbnail {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border: 2px solid #007bff;
    }

    .form-control-file {
        cursor: pointer;
    }

    /* Fix for close button */
    .modal-header .close {
        color: white;
        opacity: 1;
    }

    .modal-header .close:hover {
        color: white;
        opacity: 0.8;
    }
</style>

@section Scripts {
<script>
    let currentEditUserId = null;
    let currentPhotoPath = null;

    // Show upload button when file is selected
    document.addEventListener('DOMContentLoaded', function() {
        const photoInput = document.getElementById('modalPhotoFile');
        if (photoInput) {
            photoInput.addEventListener('change', function(e) {
                if (e.target.files && e.target.files[0]) {
                    // Preview the selected image
                    const reader = new FileReader();
                    reader.onload = function(event) {
                        document.getElementById('modalPhotoPreview').src = event.target.result;
                    };
                    reader.readAsDataURL(e.target.files[0]);
                    
                    // Show upload button
                    document.getElementById('uploadPhotoBtn').style.display = 'inline-block';
                }
            });
        }

        // Add event listener for User Type change
        const userTypeSelect = document.getElementById('editUserType');
        if (userTypeSelect) {
            userTypeSelect.addEventListener('change', function() {
                toggleSubscriptionDiv();
            });
        }
    });

    function toggleSubscriptionDiv() {
        const userType = document.getElementById('editUserType').value;
        const subscriptionDiv = document.getElementById('editSubscriptionDiv');
        const subscriptionSelect = document.getElementById('editSubscriptionType');
        
        if (userType === '2') { // Content Consumer
            subscriptionDiv.style.display = 'block';
            subscriptionSelect.required = true;
        } else {
            subscriptionDiv.style.display = 'none';
            subscriptionSelect.required = false;
            subscriptionSelect.value = ''; // Clear selection
        }
    }

    function openEditModal(userId, name, email, phone, userType, photoPath, subscriptionTypeId) {
        currentEditUserId = userId;
        currentPhotoPath = photoPath;

        document.getElementById('editUserId').value = userId;
        document.getElementById('editName').value = name;
        document.getElementById('editEmail').value = email;
        document.getElementById('editPhone').value = phone;
        document.getElementById('editUserType').value = userType;

        // Set subscription type if user is Content Consumer
        if (userType == 2 && subscriptionTypeId > 0) {
            document.getElementById('editSubscriptionType').value = subscriptionTypeId;
        } else {
            document.getElementById('editSubscriptionType').value = '';
        }

        // Show/hide subscription div based on user type
        toggleSubscriptionDiv();

        // Set photo preview
        const photoPreview = document.getElementById('modalPhotoPreview');
        if (photoPath && photoPath !== '') {
            photoPreview.src = '/' + photoPath + '?t=' + new Date().getTime();
        } else {
            photoPreview.src = 'https://via.placeholder.com/120?text=No+Photo';
        }

        // Reset file input and hide upload button
        document.getElementById('modalPhotoFile').value = '';
        document.getElementById('uploadPhotoBtn').style.display = 'none';
        document.getElementById('modalUploadMessage').innerHTML = '';

        $('#editModal').modal('show');
    }

    function uploadPhotoFromModal() {
        const fileInput = document.getElementById('modalPhotoFile');
        const file = fileInput.files[0];
        const messageDiv = document.getElementById('modalUploadMessage');
        const uploadBtn = document.getElementById('uploadPhotoBtn');

        if (!file) {
            messageDiv.innerHTML = '<div class="alert alert-warning">Please select a file</div>';
            return;
        }

        // Disable button during upload
        uploadBtn.disabled = true;
        uploadBtn.textContent = '‚è≥ Uploading...';

        const formData = new FormData();
        formData.append('file', file);

        fetch(`/api/User/${currentEditUserId}/upload-photo`, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            uploadBtn.disabled = false;
            uploadBtn.textContent = '‚¨ÜÔ∏è Upload Photo';

            if (data.message && data.photoPath) {
                messageDiv.innerHTML = '<div class="alert alert-success">‚úÖ ' + data.message + '</div>';
                currentPhotoPath = data.photoPath;
                
                // Update preview
                document.getElementById('modalPhotoPreview').src = '/' + data.photoPath + '?t=' + new Date().getTime();
                
                // Hide upload button after success
                uploadBtn.style.display = 'none';
                fileInput.value = '';

                // Reload page after 1.5 seconds to show updated photo in table
                setTimeout(() => {
                    location.reload();
                }, 1500);
            } else {
                messageDiv.innerHTML = '<div class="alert alert-danger">‚ùå Upload failed</div>';
            }
        })
        .catch(error => {
            uploadBtn.disabled = false;
            uploadBtn.textContent = '‚¨ÜÔ∏è Upload Photo';
            messageDiv.innerHTML = '<div class="alert alert-danger">‚ùå Error: ' + error.message + '</div>';
        });
    }

    function saveUser() {
        const name = document.getElementById('editName').value;
        const email = document.getElementById('editEmail').value;
        const phone = document.getElementById('editPhone').value;
        const userType = document.getElementById('editUserType').value;
        const subscriptionType = document.getElementById('editSubscriptionType').value;

        if (!name || !email) {
            alert('Name and Email are required');
            return;
        }

        // Validate subscription type for Content Consumer
        if (userType === '2' && (!subscriptionType || subscriptionType === '')) {
            alert('Subscription Plan is required for Content Consumer');
            return;
        }

        const updateData = {
            name: name,
            email: email,
            pNo: phone,
            userTypeId: parseInt(userType),
            subscriptionTypeId: userType === '2' ? parseInt(subscriptionType) : null
        };

        fetch(`/api/User/${currentEditUserId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updateData)
        })
        .then(response => {
            if (response.ok) {
                alert('User updated successfully!');
                $('#editModal').modal('hide');
                location.reload();
            } else {
                return response.json().then(data => {
                    throw new Error(data.message || 'Failed to update user');
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error updating user: ' + error.message);
        });
    }

    function deleteUser(userId) {
        if (confirm('Are you sure you want to delete this user?')) {
            fetch(`/api/User/${userId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    alert('User deleted successfully!');
                    location.reload();
                } else {
                    alert('Failed to delete user');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error deleting user');
            });
        }
    }
</script>
}